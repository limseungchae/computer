프로그래밍 개요
  프로그램
    컴퓨터에서 특정 목적의 작업을 수행하기 위해 관련된 명령어와 
    자료를 모아 놓은 것이 프로그램
      컴퓨터에게 지시할 일련의 처리 작업 내용을 담고 있음
  프로그래머
    프로그램을 만드는 사람을 프로그래머라고 함
    넓은 의미로 개발에 참여하는 사람을 개발자라 할 수 있음
-----------------------------------------------------------------
프로그램 개발 환경
  개발 도구가 필요
    프로그램을 개발하려면 프로그램 언어로 작성된 프로그램 
    소스로 실행 파일을 생성
  개발 도구
    편집기(Editor)
      프로그램 명령어인 프로그래밍 언어의 내용을 편집
    컴파일러
      개발 도구에서 가장 중요한 것은 작성한 고급 프로그래밍 언어를 
      컴퓨터가 이해할 수 있는 기계어로 변환
    디버거
      작성된 프로그램에서 발생하는 프로그램 오류를 쉽게 찾아 수정할 수
      있도록 도와주는 프로그램
    링커
      여러 목적 파일을 하나의 실행 파일로 만들어 주는 기능
-----------------------------------------------------------------
통합개발환경 IDE
  integrated Development Environments
    프로그램을 개발하는데 필요한 컴파일러, 디버거, 링커,
    에디터 등을 통합적으로 제공하는 개발 환경을 통합개발환경
패키지 해외여행 - 항공,교통,관광,숙박
통합개발 환경 - 편집기,링커,컴파일러,디버거
-----------------------------------------------------------------
프로그램 구현과정: 소스 작성과 컴파일
  소스코드(source code) 작성
    프로그램 언어를 이용하여 원하는 작업을 기술
  컴파일
    소스 파일(원시파일)을 목적파일(Object file)로 변환 과정
    컴파일러
      컴파일을 해주는 프로그램
-----------------------------------------------------------------
프로그램 구현과정: 링크와 실행
  링커
    목정 파일을 실행 가능한 실행 파일로 만들어 주는 프로그램
    이러한 여러 개의 목적 파일들을 라이브러리 함수와 연결해서 하나의 파일로
    합치는 작업을 수행
    링커 작업 결과 생성되는 프로그램을 실행 프로그램 이라함(.exe나 .com의 확장자)
원시코드 -> 목적코드 -> 실행파일 -> 메모리
-----------------------------------------------------------------
프로그램 구현과정: 디버깅
  디버깅(debugging)
    컴파일 에러나 실행 에러를 수정하는 과정
  디버거
    프로그램의 명령을 수행함에 있어 컴퓨터의 상태를 보여줌
    오류(또는 에러) 발생시 오류를 쉽게 찾을 수 있도록 도와주는 프로그램
-----------------------------------------------------------------
오류 해결
<- 컴파일 오류 -> <- 링크 오류 -> <- 실행 오류 ->
에러 종류
  컴파일 에러
    문법적인 오류로 컴파일러가 이해하지 못하는 코드를 발견할 때 발생
  런타임 에러
    설계 미숙, 기계적 결함으로 인해 프로그램 실행 중 발생
  링킹 에러
    흩어진 소스 코드 파일들을 컴파일한 뒤 각자 연결할 때 발생
  논리 에러
    컴파일 및 실행은 되지만, 사용자가 의도한 작업을 수행하지 못함
-----------------------------------------------------------------
디버깅의 유래
  호퍼 중위
    릴레이 사이에서 벌레가 발견된 전후 정황을 컴퓨터 로그기록 노트
  '디버그'란 용어의 유래
    원래 버그는 나방 벌레
    버그에 의해 컴퓨터가 오작동 된 이유에서 유래
    버그를 업애는 일
      디버그한다 라고 하기 시작
-----------------------------------------------------------------
컴파일러와 인터프리터
  인터프리터
    고급 언어를 기계어로 번역해주는 역할을 수행
    원시 코드를 한 줄씩 읽어 들여 목적 코드로 바꾸어줌
    컴파일러에 비해 번역 속도가 느릴수 밖에 없지만, 프로그램을 작성할 떄
    보다 융통성을 가질 수 있음.
  컴파일러
    원시 코드 전체를 읽은 다음 이를 기계어로 번역
    컴파일러는 한 번 컴파일 한 후에는 수정이 없다면 매번 컴파일 할 필요 없이
    빠른 시간 내에 프로그램 실행이 가능
-----------------------------------------------------------------
컴파일러와 인터프리터 중간 방식
  컴파일러와 인터프리터의 특징을 모두 갖는 방식
      자바 언어와 C# 언어
        컴파일러가 존재하여 컴파일 과정이 필요
      컴파일된 실행 파일을 실행할 때 인터프리터 방식과 같이 인터프리터가 필요
        모든 시스템에서 독립적인 프로그램 언어를 개발 위해
