프로그래밍 언어 개요
  프로그래밍 언어의 필요성
    사람이 컴퓨터에게 지시할 명령어를 기술하기 위함
  고급언어와 저급언어
    고급 언어
      인간이 이해하기 쉽고 친근한 언어
    저급 언어
      컴퓨터가 이해하기 쉬운 언어
------------------------------------------------------------------
저급 언어
  기계어
    기계어란 0과 1로 표현
    컴퓨터가 직접 이해할 수 있는 유일한 언어
    연산코드 와 피연산자 로 구성
    프로그래밍하기가 상당히 어려움
  
  어셈블리어
    복잡한 기계어를 간략하게 기호화함
    기계어의 연산코드와 피연산자를 프로그래머가 이해하기 쉬운 기호형태로 
    일대일 대응시킨 언어
      연산 코드를 기호화한 것을 니모닉 이라함
      연산 코드의 예로 LDA, ADD, STA 등이 사용
    하드웨어 장치에 대한 강력한 통제 가능
------------------------------------------------------------------
고급 언어
 인간이 이해하기 쉽고 친근한 언어
  1950년 중반부터 인간의 자연언어와 비슷한 포트란, 코볼, 베이직 등의
  고급 언어가 개발되어 프로그램 개발에 사용
------------------------------------------------------------------ 
프로그램 세대
1세대 - 1945년 
  컴퓨터가 이해하는 유일한 언어인 기계어만을 이용한 세대이면 현재에도 기계어는 이용됨
2세대 - 1950년 중반
  어셈블리어와 어셈블러가 개발되어 프로그램 개발의 생산성이 높아진 세대이나 시스템마다
  어셈블리어는 다르므로 시스템 호환 문제가 계속 남아 있었던 세대임
3세대 - 1960년 초반
  포트란, 알골, 베이직, 파스칼 같은 고급 언어와 컴파일러가 개발되었고 시스템에 독립적인
  프로그램을 개발하여 프로그램 개발의 생산성이 매우 높아진 세대임
4세대 -1970년 초반 이후
  비절차 중심의 언어로 보고서 생성기와 데이터 베이스 질의 언어 또는 비주얼 베이직과 
  같은 비주얼 프로그램밍 언어임
5세대 - 현재와 미래
  영어, 한국어와 같은 진정한 의미의 자연 언어는 없으며, 컴퓨터에 대한 기초지식이 없는
  일반인도 코드 없이 프로그램을 만들 수 있는 블록 비주얼 프로그래밍 언어가 소개되어 
  교욱용 프로그래밍 언어로 많이 활용되고 있음
------------------------------------------------------------------
비절차적 중심의 언어
  데이터베이스 질의 언어 - SQL
    비절차적 중심 언어
    프로그래머가 원하는 결과를 얻기 위해서 하나 하나의 절차를 따를 필요가 없다는 의미
------------------------------------------------------------------
비주얼 프로그래밍 언어
  Visual Programing Language
    비주얼 베이직
    델파이
------------------------------------------------------------------
블록 프로그래밍 언어
  블록 프로그래밍
   코드 없는 정해진 블록으로 코딩
    진보된 비주얼 프로그래밍 언어
    MIT에서 개발한 스크래치
